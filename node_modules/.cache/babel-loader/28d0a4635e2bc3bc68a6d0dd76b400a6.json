{"ast":null,"code":"import _slicedToArray from\"/Users/alex/Documents/CODING/class_repo_activities/16-Portfolio-REACT/02-Homework/Portfolio-Update-3.22/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";// import \"./style.css\";\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function ContactForm(){var formStyle={margin:\"20px\"};var inputStyle={display:\"block\",marginTop:\"5px\",marginBottom:\"5px\",width:\"100%\"};// Here we set two state variables for firstName and lastName using `useState`\n// 1st variable in array = name of state variable\n// 2nd = update method for state change\n// useState(x)    -    x = initial value\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),firstName=_useState2[0],setFirstName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),lastName=_useState4[0],setLastName=_useState4[1];var handleInputChange=function handleInputChange(e){// Getting the value and name of the input which triggered the change\nvar _e$target=e.target,name=_e$target.name,value=_e$target.value;// Ternary statement that will call either setFirstName or setLastName based on what field the user is typing in\nreturn name===\"firstName\"?setFirstName(value):setLastName(value);};var handleFormSubmit=function handleFormSubmit(e){// Preventing the default behavior of the form submit (which is to refresh the page)\ne.preventDefault();// Alert the user their first and last name, clear the inputs\nalert(\"Hello \".concat(firstName,\" \").concat(lastName));setFirstName(\"\");setLastName(\"\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Hello \",firstName,\" \",lastName]}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",style:formStyle,children:[/*#__PURE__*/_jsx(\"input\",{value:firstName,name:\"firstName\",onChange:handleInputChange,type:\"text\",placeholder:\"First Name\",style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{value:lastName,name:\"lastName\",onChange:handleInputChange,type:\"text\",placeholder:\"Last Name\",style:inputStyle}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleFormSubmit,children:\"Submit\"})]})]});}export default ContactForm;","map":{"version":3,"sources":["/Users/alex/Documents/CODING/class_repo_activities/16-Portfolio-REACT/02-Homework/Portfolio-Update-3.22/client/src/components/ContactForm.js"],"names":["React","useState","ContactForm","formStyle","margin","inputStyle","display","marginTop","marginBottom","width","firstName","setFirstName","lastName","setLastName","handleInputChange","e","target","name","value","handleFormSubmit","preventDefault","alert"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA;wFAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB,GAAMC,CAAAA,SAAS,CAAG,CAChBC,MAAM,CAAE,MADQ,CAAlB,CAGA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,OAAO,CAAE,OADQ,CAEjBC,SAAS,CAAE,KAFM,CAGjBC,YAAY,CAAE,KAHG,CAIjBC,KAAK,CAAE,MAJU,CAAnB,CAMA;AACA;AACA;AACA;AACA,cAAkCR,QAAQ,CAAC,EAAD,CAA1C,wCAAOS,SAAP,eAAkBC,YAAlB,eACA,eAAgCV,QAAQ,CAAC,EAAD,CAAxC,yCAAOW,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/B;AACA,cAAwBA,CAAC,CAACC,MAA1B,CAAQC,IAAR,WAAQA,IAAR,CAAcC,KAAd,WAAcA,KAAd,CAEA;AACA,MAAOD,CAAAA,IAAI,GAAK,WAAT,CAAuBN,YAAY,CAACO,KAAD,CAAnC,CAA6CL,WAAW,CAACK,KAAD,CAA/D,CACD,CAND,CAQA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,CAAD,CAAO,CAC9B;AACAA,CAAC,CAACK,cAAF,GAEA;AACAC,KAAK,iBAAUX,SAAV,aAAuBE,QAAvB,EAAL,CACAD,YAAY,CAAC,EAAD,CAAZ,CACAE,WAAW,CAAC,EAAD,CAAX,CACD,CARD,CAUA,mBACE,oCACE,8BACSH,SADT,KACqBE,QADrB,GADF,cAIE,cAAM,SAAS,CAAC,MAAhB,CAAuB,KAAK,CAAET,SAA9B,wBACE,cACE,KAAK,CAAEO,SADT,CAEE,IAAI,CAAC,WAFP,CAGE,QAAQ,CAAEI,iBAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,YALd,CAME,KAAK,CAAET,UANT,EADF,cASE,cACE,KAAK,CAAEO,QADT,CAEE,IAAI,CAAC,UAFP,CAGE,QAAQ,CAAEE,iBAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,WALd,CAME,KAAK,CAAET,UANT,EATF,cAiBE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEc,gBAA/B,oBAjBF,GAJF,GADF,CA4BD,CAED,cAAejB,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n// import \"./style.css\";\n\nfunction ContactForm() {\n  const formStyle = {\n    margin: \"20px\",\n  };\n  const inputStyle = {\n    display: \"block\",\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    width: \"100%\",\n  };\n  // Here we set two state variables for firstName and lastName using `useState`\n  // 1st variable in array = name of state variable\n  // 2nd = update method for state change\n  // useState(x)    -    x = initial value\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { name, value } = e.target;\n\n    // Ternary statement that will call either setFirstName or setLastName based on what field the user is typing in\n    return name === \"firstName\" ? setFirstName(value) : setLastName(value);\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    // Alert the user their first and last name, clear the inputs\n    alert(`Hello ${firstName} ${lastName}`);\n    setFirstName(\"\");\n    setLastName(\"\");\n  };\n\n  return (\n    <div>\n      <p>\n        Hello {firstName} {lastName}\n      </p>\n      <form className=\"form\" style={formStyle}>\n        <input\n          value={firstName}\n          name=\"firstName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"First Name\"\n          style={inputStyle}\n        />\n        <input\n          value={lastName}\n          name=\"lastName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"Last Name\"\n          style={inputStyle}\n        />\n        <button type=\"button\" onClick={handleFormSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}